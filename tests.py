import unittest
from cipher import Cipher
import requests

class Test(unittest.TestCase):

    def test_cipher(self):
        text='Alphabet should cover at least lower and uppercase letters, digits, punctuation marks and whitespace.'
        self.assertEqual(Cipher.decode(Cipher.encode(text, 5, 2021) , 2705, 2021), text)
        self.assertEqual(Cipher.decode(Cipher.encode(text, 3, 3127) , 2011, 3127), text)

    def test_api_encode(self):
        text='Alphabet should cover at least lower and uppercase letters, digits, punctuation marks and whitespace.'
        expected_value={"encoded_text":"0016800426017660191100102005070115600270017900186901911009270138500426010550179000117009270105901156000050179000102002700179000426011560010201869002700179000426009270109301156000050179000102016040105501790013850176601766011560000500117001020186901156017900042601156002700027001156000050186900603017900105500546018030054600270018690060301790017660138501604001170027001385001020027000546009270160401790007480010200005016380186901790001020160401055017900109301911005460027001156018690176600102001170115600845"}

        r = requests.get('http://127.0.0.1:8000/get_encoded_text/5/2021/'+text)
        value_json=r.json()
        self.assertEqual(value_json, expected_value)


    def test_api_decode(self):
        text="0016800426017660191100102005070115600270017900186901911009270138500426010550179000117009270105901156000050179000102002700179000426011560010201869002700179000426009270109301156000050179000102016040105501790013850176601766011560000500117001020186901156017900042601156002700027001156000050186900603017900105500546018030054600270018690060301790017660138501604001170027001385001020027000546009270160401790007480010200005016380186901790001020160401055017900109301911005460027001156018690176600102001170115600845"
        expected_value={'decoded_text':'Alphabet should cover at least lower and uppercase letters, digits, punctuation marks and whitespace.'}

        r = requests.get('http://127.0.0.1:8000/get_decoded_text/2705/2021/'+text)
        value_json=r.json()
        self.assertEqual(value_json, expected_value)




if __name__ == '__main__':
    Test.test_cipher()
    Test.test_api_encode()
    Test.test_api_decode()